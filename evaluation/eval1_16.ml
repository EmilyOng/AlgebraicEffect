effect Foo0 : (unit -> unit)
effect Foo1 : (unit -> unit)
effect Foo2 : (unit -> unit)
effect Foo3 : (unit -> unit)
effect Foo4 : (unit -> unit)
effect Foo5 : (unit -> unit)
effect Foo6 : (unit -> unit)
effect Foo7 : (unit -> unit)
effect Foo8 : (unit -> unit)
effect Foo9 : (unit -> unit)
effect Foo10 : (unit -> unit)
effect Foo11 : (unit -> unit)
effect Foo12 : (unit -> unit)
effect Foo13 : (unit -> unit)
effect Foo14 : (unit -> unit)
effect Foo15 : (unit -> unit)

let stress f
(*@ requires _^*, eff(f)= (_^* ) -> Foo0.Q(Foo0()) @*)
(*@ ensures  Foo0.(Foo1.Foo2.Foo3.Foo4.Foo5.Foo6.Foo7.Foo8.Foo9.Foo10.Foo11.Foo12.Foo13.Foo14.Foo15.Foo0)^w @*)
  = match f () with
 | _ -> ()
 | effect Foo0 k ->  continue k (fun () -> perform Foo1 ())
 | effect Foo1 k ->  continue k (fun () -> perform Foo2 ())
 | effect Foo2 k ->  continue k (fun () -> perform Foo3 ())
 | effect Foo3 k ->  continue k (fun () -> perform Foo4 ())
 | effect Foo4 k ->  continue k (fun () -> perform Foo5 ())
 | effect Foo5 k ->  continue k (fun () -> perform Foo6 ())
 | effect Foo6 k ->  continue k (fun () -> perform Foo7 ())
 | effect Foo7 k ->  continue k (fun () -> perform Foo8 ())
 | effect Foo8 k ->  continue k (fun () -> perform Foo9 ())
 | effect Foo9 k ->  continue k (fun () -> perform Foo10 ())
 | effect Foo10 k ->  continue k (fun () -> perform Foo11 ())
 | effect Foo11 k ->  continue k (fun () -> perform Foo12 ())
 | effect Foo12 k ->  continue k (fun () -> perform Foo13 ())
 | effect Foo13 k ->  continue k (fun () -> perform Foo14 ())
 | effect Foo14 k ->  continue k (fun () -> perform Foo15 ())
 | effect Foo15 k ->  continue k (fun () -> perform Foo0 ())